{"entries":[{"timestamp":1739601703045,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[1," id=\"XuD+n=~+ZE:^*BV`Q-pj\""],[0," x=\""],[1,"2"],[0,"0\" y=\""],[1,"2"],[0,"0\"><"]],"start1":497,"start2":497,"length1":18,"length2":46},{"diffs":[[0,"ow_icon\""],[1," id=\"Q3cRl^4YlrZiL*BR}F|K\""],[0,"><field "]],"start1":589,"start2":589,"length1":16,"length2":42},{"diffs":[[0,"/field><"],[1,"next><block type=\"bluetooth_start_button_service\" id=\"FeBL$)k:RJ3W-@z8^`%w\"><next><block type=\"bluetooth_start_io_pin_service\" id=\"-$?SD%Z=6zB:*%j-/YoX\"><next><block type=\"bluetooth_start_accelerometer_service\" id=\"fyE9Oy0g/GfS!Ko:@$.R\"><next><block type=\"bluetooth_start_led_service\" id=\"N/RAhp[/),_SLJ%{5fGT\"><next><block type=\"bluetooth_start_uart_service\" id=\";EQBmf#!H%R=*]/TaDHY\"><next><block type=\"device_set_analog_period\" id=\"K*Jx$~f_?#n;o6H+Mo+3\"><field name=\"pin\">AnalogPin.P13</field><value name=\"micros\"><shadow type=\"math_number\" id=\"y3)8^Gefqj$Cf[x7CL`g\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"device_set_analog_period\" id=\"2b?b(QkOaW{j[|1`9g|R\"><field name=\"pin\">AnalogPin.P14</field><value name=\"micros\"><shadow type=\"math_number\" id=\"jGLDr;HKSBaqY2Tw0Zdg\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"device_set_analog_period\" id=\"fY3FQe**1zX]Wv1?RRqj\"><field name=\"pin\">AnalogPin.P15</field><value name=\"micros\"><shadow type=\"math_number\" id=\";{2QXNO1NcQn-~X=9aki\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"device_set_analog_period\" id=\"Mp$H=r:ooQ?Bc+Q!1Ol[\"><field name=\"pin\">AnalogPin.P16</field><value name=\"micros\"><shadow type=\"math_number\" id=\"RMb~U%|QDhIj,XFYvKJT\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"basic_show_icon\" id=\"A[_%xQw2NAhOwga}=L7b\"><field name=\"i\">IconNames.Diamond</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"bluetooth_on_connected\" id=\"Vg_II:,(X3u9Fv{$+63C\" x=\"652\" y=\"20\"><statement name=\"HANDLER\"><block type=\"basic_show_icon\" id=\"jYEQQxMIeSzT_gU(f7hC\"><field name=\"i\">IconNames.Yes</field></block></statement></block><block type=\"bluetooth_on_data_received\" id=\"sCg|4#5I(.ZH-hKF=NAA\" x=\"941\" y=\"20\"><comment pinned=\"false\" h=\"80\" w=\"160\" relx=\"10\" rely=\"10\">Protocol:\nFunction,Value,Value</comment><value name=\"delimiters\"><shadow type=\"serial_delimiter_conv\" id=\"P-$R/)k4rB5M4}2Z`C|)\"><field name=\"del\">Delimiters.NewLine</field></shadow></value><statement name=\"HANDLER\"><block type=\"variables_set\" id=\"aPxBKp~X9sHh)43;v{5J\"><field name=\"VAR\" id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"bluetooth_uart_read\" id=\"5;[a(V}79:-a=?a%Y~$)\"><value name=\"del\"><shadow type=\"serial_delimiter_conv\" id=\"XD]QN2%m~OC3q}{MY|@y\"><field name=\"del\">Delimiters.NewLine</field></shadow></value></block></value><next><block type=\"serial_writeline\" id=\"W+m`=@snXk#?ton3T^?P\"><value name=\"text\"><block type=\"variables_get\" id=\"V#Kt,]4GvAX@7wQ=5%|Y\"><field name=\"VAR\" id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</field></block></value><next><block type=\"variables_set\" id=\"Z=VGX}{ZGciDVS@+.+oE\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field><value name=\"VALUE\"><block type=\"string_split\" id=\"qv0591%K]:_S8K]4Vp[;\"><value name=\"this\"><shadow type=\"text\" id=\"!h35qh@X:uQZlMC;#wXY\"><field name=\"TEXT\">this</field></shadow><block type=\"variables_get\" id=\"qp]ge{x|?aZi4v0,.:9I\"><field name=\"VAR\" id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</field></block></value><value name=\"separator\"><shadow type=\"text\" id=\"j.L7w`vu85]bvI1dx2+k\"><field name=\"TEXT\">,</field></shadow></value></block></value><next><block type=\"variables_set\" id=\"h1k~L__EWDW{B#*beumd\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\" id=\"Q6chWqLQoO;X82%-Sx{r\"><value name=\"LIST\"><block type=\"variables_get\" id=\"m8H75F/L3;*69!0ljW6h\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"`V=(z%anWg0;jP$2gGR4\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"controls_if\" id=\"LnU3R[*$lSotm=!t,$[E\"><mutation elseif=\"2\" else=\"1\"/><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"{ukYX:FS)bX_:Ku$6rdO\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"yJKF+y+cpF7LT+-be(er\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"DgYhq~A2L8mK66%e;#}!\"><field name=\"TEXT\">V</field></block></value></block></value><value name=\"IF1\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"RSl{[K4c#LiwZw6s1I?.\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"asTbHT[TYkLZkVev)AVC\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"AKDLZf]B$@-.~)L63?PQ\"><field name=\"TEXT\">S</field></block></value></block></value><statement name=\"DO1\"><block type=\"variables_set\" id=\"oorKFF?!t291nI:qj2N-\"><field name=\"VAR\" id=\"(68V9h#p,`K$-0g{f^F#\">walkSpeed</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"string_parsefloat\" id=\"5b|n6q3X[3I-CL:qFSg}\"><value name=\"text\"><block type=\"lists_index_get\" id=\"mCl?1b7s*Dw/?KrG`mz4\"><value name=\"LIST\"><block type=\"variables_get\" id=\"KVz_Ux1y!q2dd+e`X_k}\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"h75q8wDf$,ghL]]n~=A|\"><field name=\"NUM\">1</field></shadow></value></block></value></block></value><next><block type=\"variables_set\" id=\"@.Cc=+/7=O4e]QH`YHlW\"><field name=\"VAR\" id=\"079BJ/1L%k(R`ft3vY#(\">turnSpeed</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"string_parsefloat\" id=\"gcYG#p/65Ksc7B9)d!^E\"><value name=\"text\"><block type=\"lists_index_get\" id=\"s#wa8|AyC=?c0`MI(f}x\"><value name=\"LIST\"><block type=\"variables_get\" id=\"P]WkV`Cq4CM:gu%2Xqtg\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"UK:/StQsOafex+yD:ZQe\"><field name=\"NUM\">2</field></shadow></value></block></value></block></value><next><block type=\"function_call\" id=\"+{/g3I_z*]LK~*9_[G*a\"><mutation name=\"tobbieTurn\" functionid=\"LFnxMS}D_7Tm]bFQ`_Cx\"><arg name=\"speed\" id=\"2rvn17p2f6rwf68khs5q\" type=\"number\"/></mutation><value name=\"2rvn17p2f6rwf68khs5q\"><shadow type=\"math_number\" id=\"zElg|jlUot)Xucq=1goc\"><field name=\"NUM\">1</field></shadow><block type=\"variables_get\" id=\"jHt_s)B@N}UC]8K-:B!I\"><field name=\"VAR\" id=\"079BJ/1L%k(R`ft3vY#(\">turnSpeed</field></block></value><next><block type=\"function_call\" id=\"{/;uI1OlwY0cb{?)4_6@\"><mutation name=\"tobbieWalk\" functionid=\"roz?6|[V[l{Cfyq8ev*Z\"><arg name=\"speed2\" id=\"x4s4zhe4wzjcrgt1r5lz\" type=\"number\"/></mutation><value name=\"x4s4zhe4wzjcrgt1r5lz\"><shadow type=\"math_number\" id=\"x/w|Onl,XyYv9|#FwL8J\"><field name=\"NUM\">1</field></shadow><block type=\"variables_get\" id=\"eR@CAQh$u~b,BRr[_12d\"><field name=\"VAR\" id=\"(68V9h#p,`K$-0g{f^F#\">walkSpeed</field></block></value></block></next></block></next></block></next></block></statement><value name=\"IF2\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"_Vi#,[.suC6:|fYSCilU\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"(Uhk7:+g^UVwPuvTX*]k\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"}w?E;iy-6WzX}Oux85=#\"><field name=\"TEXT\">T</field></block></value></block></value><statement name=\"DO2\"><block type=\"variables_set\" id=\"fBaL3JiEG-/~{]H5x`Gn\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\" id=\"u8S8CyZ.:Mkt+p*5{rix\"><value name=\"LIST\"><block type=\"variables_get\" id=\"Dxi~iO=oiCtJvuM7#`v3\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"Ej%O)-Sx|#~HLWXvUf-3\"><field name=\"NUM\">1</field></shadow></value></block></value></block></statement><statement name=\"ELSE\"><block type=\"basic_show_icon\" id=\"Y1Zy9I$b~,~Mr`FD.:/s\"><field name=\"i\">IconNames.Heart</field></block></statement></block></next></block></next></block></next></block></next></block></statement></block><block type=\"bluetooth_on_disconnected\" id=\"D^d:T$5]Y,L`:Ik8Nwpy\" x=\"1766\" y=\"20\"><statement name=\"HANDLER\"><block type=\"basic_show_icon\" id=\"JQMZOXFuo(%JV|e}qRV#\"><field name=\"i\">IconNames.Diamond</field><next><block type=\"function_call\" id=\"p-VsiWQn;[b-u7Ghbj(k\"><mutation name=\"tobbieTurn\" functionid=\"LFnxMS}D_7Tm]bFQ`_Cx\"><arg name=\"speed\" id=\"2rvn17p2f6rwf68khs5q\" type=\"number\"/></mutation><value name=\"2rvn17p2f6rwf68khs5q\"><shadow type=\"math_number\" id=\"Bx5f`hVSY~k.s0MRm]8f\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"function_call\" id=\"G[R+)tf+!5pLOz-eq7J)\"><mutation name=\"tobbieWalk\" functionid=\"roz?6|[V[l{Cfyq8ev*Z\"><arg name=\"speed2\" id=\"x4s4zhe4wzjcrgt1r5lz\" type=\"number\"/></mutation><value name=\"x4s4zhe4wzjcrgt1r5lz\"><shadow type=\"math_number\" id=\"rL)VA4lkU|gm7zrc+jWe\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></statement></block><block type=\"device_forever\" id=\"^?4qKdMF[K)R|:8PF+@_\" x=\"2074\" y=\"20\"><statement name=\"HANDLER\"><block type=\"controls_if\" id=\"[vVXsJInwVS^m4Mv14OS\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"A@3-LhU3Aa{D=iK$a9Gh\"><field name=\"OP\">NEQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"UZ{s+N];IaAa8nIJ/9]/\"><field name=\"VAR\" id=\"#p1$w}[5XLX(O/W1=F@-\">prevDisplayText</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"2N8T^7XiuU))AJ}9RH}|\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"6NdZBCK)vz5yE|qexiq9\"><field name=\"VAR\" id=\"#p1$w}[5XLX(O/W1=F@-\">prevDisplayText</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"KKige1|tX}]!:VEQ])gQ\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field></block></value><next><block type=\"device_clear_display\" id=\"O0.*D}$.AkP@7C6YW#lH\"><next><block type=\"device_print_message\" id=\"-Sr$Mob?,Dc~4X?bHBoW\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\"/></shadow><block type=\"variables_get\" id=\"L*{Z6@4fp}cX1iGjyd*Q\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field></block></value><next><block type=\"device_pause\" id=\"Jy;rF-oxt-RipuypLns9\"><value name=\"pause\"><shadow type=\"timePicker\" id=\":`zYS}oKfm5rDuHe.YG]\"><field name=\"ms\">500</field></shadow></value></block></next></block></next></block></next></block></statement></block></statement></block><block type=\"function_definition\" id=\"1AJ+-Y$sLOPxCK99{M3S\" x=\"20\" y=\"967\"><mutation name=\"tobbieWalk\" functionid=\"roz?6|[V[l{Cfyq8ev*Z\"><arg name=\"speed2\" id=\"x4s4zhe4wzjcrgt1r5lz\" type=\"number\"/></mutation><field name=\"function_name\">tobbieWalk</field><value name=\"x4s4zhe4wzjcrgt1r5lz\"><shadow type=\"argument_reporter_number\" id=\"pQ:l+IqwjxmYl-F.`biy\"><field name=\"VALUE\">speed2</field></shadow></value><statement name=\"STACK\"><block type=\"controls_if\" id=\"D6.!OgO}lTj(V7%iIq6*\"><mutation else=\"1\"/><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"dqwH::9;,@tAD6x0m*LP\"><field name=\"OP\">GTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"aozd~b7c!EOxx_WfRp6)\"><field name=\"VALUE\">speed2</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"YNL@IS,QJ^S$^b,eW[zm\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_analog_pin\" id=\"l!=1S$#,h;u5qgyzRDy}\"><field name=\"name\">AnalogPin.P13</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"D^nd8Yk}7.1*xzM!XN-U\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"uC2yoT3@dx#=|D(%F2Z`\"><field name=\"VALUE\">speed2</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"NGp8S@3Qjn9+?b)8VCXQ\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"[9|z]o-_Re[[^{5p`ZCJ\"><field name=\"NUM\">100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"L~57;aBpr5?I$7[/zl~*\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"_c7Um#~/OEBrkl|c4F$4\"><field name=\"NUM\">1023</field></shadow></value></block></value><next><block type=\"device_set_analog_pin\" id=\"zVr)BRQ8=,[M*gRjb[n*\"><field name=\"name\">AnalogPin.P14</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"mL^m4U3)U^|3u%{Hp)Wr\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_analog_pin\" id=\"h7U$[HB3f(CZP4;5VNfl\"><field name=\"name\">AnalogPin.P13</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"*hTW;7GGnVK#4I+`,$[w\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_analog_pin\" id=\"u6g8,ntY_hn/s^.XT@,|\"><field name=\"name\">AnalogPin.P14</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"W%8,i}2{ULy?/d%OD}yE\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"-ZC;cmB;AT#B~acxQ(uN\"><field name=\"VALUE\">speed2</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"tQ5Kwld6QPja=4)4t?9$\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"7RS5C!VszKfw0:-qI0mq\"><field name=\"NUM\">-100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"I}t~JL;v(l0w=Cu5K{qp\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"FBwO,2[XR#AQUG7lm%K1\"><field name=\"NUM\">1023</field></shadow></value></block></value></block></next></block></statement></block></statement></block><block type=\"function_definition\" id=\"zA]pwx5TNSLA8^r)Cq?m\" x=\"871\" y=\"967\"><mutation name=\"tobbieTurn\" functionid=\"LFnxMS}D_7Tm]bFQ`_Cx\"><arg name=\"speed\" id=\"2rvn17p2f6rwf68khs5q\" type=\"number\"/></mutation><field name=\"function_name\">tobbieTurn</field><value name=\"2rvn17p2f6rwf68khs5q\"><shadow type=\"argument_reporter_number\" id=\"t1vW^):v@D:a{0jZhe9t\"><field name=\"VALUE\">speed</field></shadow></value><statement name=\"STACK\"><block type=\"controls_if\" id=\"ZK*dI~(J{MJ3YYH{nBd1\"><mutation else=\"1\"/><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"Qg22_bN.L}*y$Y`q12FO\"><field name=\"OP\">GTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"!7!IC9Y?{#5z+{Q}6[(k\"><field name=\"VALUE\">speed</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"(^6h7QPk3_Y2w!@8_H6P\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_analog_pin\" id=\"IoPH},xd-0w8Vf+Z;msA\"><field name=\"name\">AnalogPin.P16</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"gyIsyOuM[T:o/Ng6_i/K\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"iED`;-RFscd(oMU{?+.j\"><field name=\"VALUE\">speed</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"khaxi86M13a|szy7NQ{(\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"f+=92S@qdkNB?p$wWa~c\"><field name=\"NUM\">100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"|p}qY+$Nj/u0p2y(z.p[\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"3db,?Yr$dIfZHgK}xN@j\"><field name=\"NUM\">1023</field></shadow></value></block></value><next><block type=\"device_set_analog_pin\" id=\"dlSd2Jeu7:xKI{D{BHFg\"><field name=\"name\">AnalogPin.P15</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"nsF,=_i-/MB+nZP|dv(e\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_analog_pin\" id=\"(Z~-Fk@rCZS~b4M)@UuS\"><field name=\"name\">AnalogPin.P16</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"hl=;o}t77K}F8@MB8RHI\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_analog_pin\" id=\"sLQKn%zMLQHmHTb9+F0G\"><field name=\"name\">AnalogPin.P15</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"Ub4xv75ScXIE$QT)fAMi\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"6kOUxqGs.)T.Y6N^wID}\"><field name=\"VALUE\">speed</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"hnouff$.ka6`hG$nly3z\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"O%~`Xq#TKEHrOi2efG^P\"><field name=\"NUM\">-100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"Ia~A1nJ[HFW~a~2=PPCp\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"z$l7JTniK$SV!I+^K3B(\"><field name=\"NUM\">1023</field></shadow></value></block></value></block></next></block></statement><"],[0,"/block><"]],"start1":663,"start2":663,"length1":16,"length2":18411}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.showIcon(IconNames.SmallDiamond)\nbluetooth.startButtonService()\nbluetooth.startIOPinService()\nbluetooth.startAccelerometerService()\nbluetooth.startLEDService()\nbluetooth.startUartService()\npins.analogSetPeriod(AnalogPin.P13, 1000)\npins.analogSetPeriod(AnalogPin.P14, 1000)\npins.analogSetPeriod(AnalogPin.P15, 1000)\npins.analogSetPeriod(AnalogPin.P16, 1000)\nbasic.showIcon(IconNames.Diamond)\nbasic.forever(function () {\n    if (prevDisplayText != displayText) {\n        prevDisplayText = displayText\n        basic.clearScreen()\n        basic.showString(\"\" + (displayText))\n        basic.pause(500)\n    }\n})\n"],[1,"  "]],"start1":0,"start2":0,"length1":612,"length2":2}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": \""],[-1,"Tobbie-II-Test"],[1,"main"],[0,"\",\n "]],"start1":11,"start2":11,"length1":22,"length2":12},{"diffs":[[0,"   \""],[-1,"microphone"],[1,"radio"],[0,"\": \""]],"start1":93,"start2":93,"length1":18,"length2":13},{"diffs":[[0,"       \""],[-1,"bluetooth"],[1,"microphone"],[0,"\": \"*\"\n "]],"start1":111,"start2":111,"length1":25,"length2":26},{"diffs":[[0,".md\""],[-1,",\n        \"test.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"target\": \"4.0.16\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"pairing_mode\": 0,\n                    \"whitelist\": 0\n                }\n            }\n        }\n    }"],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":215,"start2":215,"length1":500,"length2":44}]},{"type":"added","filename":"test.ts","value":"\n/**\n* Użyj tego pliku, aby zdefiniować niestandardowe funkcje i bloki.\n* Czytaj więcej na https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n"}]},{"timestamp":1739601992271,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.showIcon(IconNames.SmallDiamond)\nbluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Yes)\n})\nbluetooth.onBluetoothDisconnected(function () {\n    basic.showIcon(IconNames.Diamond)\n    tobbieTurn(0)\n    tobbieWalk(0)\n})\nfunction tobbieTurn(speed: number) {\n    if (speed >= 0) {\n        pins.analogWritePin(AnalogPin.P16, pins.map(\n            speed,\n            0,\n            100,\n            0,\n            1023\n        ))\n        pins.analogWritePin(AnalogPin.P15, 0)\n    } else {\n        pins.analogWritePin(AnalogPin.P16, 0)\n        pins.analogWritePin(AnalogPin.P15, pins.map(\n            speed,\n            0,\n            -100,\n            0,\n            1023\n        ))\n    }\n}\n// Protocol:\n// Function,Value,Value\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    rxData = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    serial.writeLine(rxData)\n    rxString = rxData.split(\",\")\n    rxFunction = rxString[0]\n    if (rxFunction == \"V\") {\n\n    } else if (rxFunction == \"S\") {\n        walkSpeed = parseFloat(rxString[1])\n        turnSpeed = parseFloat(rxString[2])\n        tobbieTurn(turnSpeed)\n        tobbieWalk(walkSpeed)\n    } else if (rxFunction == \"T\") {\n        displayText = rxString[1]\n    } else {\n        basic.showIcon(IconNames.Heart)\n    }\n})\nfunction tobbieWalk(speed2: number) {\n    if (speed2 >= 0) {\n        pins.analogWritePin(AnalogPin.P13, pins.map(\n            speed2,\n            0,\n            100,\n            0,\n            1023\n        ))\n        pins.analogWritePin(AnalogPin.P14, 0)\n    } else {\n        pins.analogWritePin(AnalogPin.P13, 0)\n        pins.analogWritePin(AnalogPin.P14, pins.map(\n            speed2,\n            0,\n            -100,\n            0,\n            1023\n        ))\n    }\n}\nlet prevDisplayText = \"\"\nlet displayText = \"\"\nlet turnSpeed = 0\nlet walkSpeed = 0\nlet rxFunction = \"\"\nlet rxString: string[] = []\nlet rxData = \"\"\n"],[0,"basi"]],"start1":0,"start2":0,"length1":1966,"length2":4}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"  \"main."],[1,"blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"test."],[0,"ts\"\n    "]],"start1":178,"start2":178,"length1":16,"length2":79},{"diffs":[[0,"iles\": ["],[1,"\n        \"test.ts\"\n    "],[0,"],\n    \""]],"start1":270,"start2":270,"length1":16,"length2":39}]},{"type":"removed","filename":"test.ts","value":"\n/**\n* Użyj tego pliku, aby zdefiniować niestandardowe funkcje i bloki.\n* Czytaj więcej na https://makecode.microbit.org/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"\"\nnamespace custom {\n    /**\n     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n    //% block\n    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n    }\n\n    /**\n     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n    //% block\n    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n    }\n}\n"},{"type":"removed","filename":"main.blocks","value":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</variable><variable id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</variable><variable id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</variable><variable id=\"(68V9h#p,`K$-0g{f^F#\">walkSpeed</variable><variable id=\"079BJ/1L%k(R`ft3vY#(\">turnSpeed</variable><variable id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</variable><variable id=\"#p1$w}[5XLX(O/W1=F@-\">prevDisplayText</variable></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.SmallDiamond</field></block></statement></block></xml>"}]},{"timestamp":1739602518307,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"basic.showIcon(IconNames.SmallDiamond)\n"],[0,"bluetoot"]],"start1":0,"start2":0,"length1":8,"length2":47},{"diffs":[[0,"es)\n"],[-1,"    namespace Tobbie{\n        let ADL_R: number = 0;\n        let ADH_R: number = 0;\n        let ADL_L: number = 0;\n        let ADH_L: number = 0;\n        let Read_LIR: number = 0;\n        let Read_RIR: number = 0;\n        let event_src_ir = 12;\n        let event_ir_sensor = 1;\n        let Motor_R: boolean = false;\n        let Motor_L: boolean = false;\n        let PX: number = 0;\n        let PY: number = 0;\n        let Force: number = 10;\n\n        function IR_sensorL(irdataL: number) {   //此為中斷觸發方塊\n            control.inBackground(() => {\n                let flag = false\n                let last_flag = false\n                while (true) {\n                    let ob: boolean = LBlock();\n                    if (ob) { flag = true } else { flag = false }\n                    if (flag != last_flag) {\n                        if (flag) {\n                            control.raiseEvent(event_src_ir, event_ir_sensor)\n                            basic.pause(300) //300ms\n                        }\n                        last_flag = flag\n                    }\n                    basic.pause(1)\n\n                }\n\n            }\n            )\n\n        }\n        //    \n        //    背景執行紅外線測距\n        //    @param irdata_Set ; eg: 512\n        //    \n        //    //% blockId=\"IR_EVENTL\" block=\"ON obstacles on the left: |%irdata_Set\"\n        //    //% irdata_Set.min=0 irdata_Set.max=1023\n        //    //% blockGap=10 weight=99   //代表其重要性，越重放越高\n        //    export function onIRL(irdata_Set: number = 512, handler: Action) {\n        //       IR_sensorL(irdata_Set);\n        //        control.onEvent(event_src_ir, event_ir_sensor, handler); \n\n        //   }\n        //    function IR_sensorR(irdata: number) { \n        //        control.inBackground(() => {\n        //           let flag = false\n        //            let last_flag = false\n        //            while (true) {\n        //                let ob: boolean = LBlock();\n        //                if(ob){flag=true}else{flag=false}\n        //                if (flag != last_flag) {\n        //                    if (flag) { \n        //                        control.raiseEvent(event_src_ir, event_ir_sensor)\n        //                        basic.pause(3)\n        //                    }\n        //                    last_flag = flag\n        //                }\n        //                basic.pause(1)\n        //            }   \n        //        }      \n        //        )\n        //    }\n\n        /** Read the value sensed by the right side of the infrared sensor.\n        */\n        //% blockId=\"Read_RBolck\" block=\"get right IR data(return 0~1024)\"\n        //% blockGap=5 weight=65                 //與下一個方塊的間隙及排重\n        export function Read_RBlock()"],[1,"})\nbluetooth.onBluetoothDisconnected(function () {\n    basic.showIcon(IconNames.Diamond)\n    tobbieTurn(0)\n    tobbieWalk(0)\n})\nfunction tobbieTurn(speed"],[0,": number"],[1,")"],[0," {\n    "],[-1,"        basic.pause(100)\n            ADL_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 0)\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) Read_RIR = ADH_R - ADL_R;\n            return (Read_RIR)"],[1,"if (speed >= 0) {\n        pins.analogWritePin(AnalogPin.P16, pins.map(\n            speed,\n            0,"],[0,"\n   "]],"start1":114,"start2":114,"length1":3129,"length2":281},{"diffs":[[0,"    "],[-1,"}\n"],[0,"    "],[-1,"    /** Read the value sensed by the left side of the infrared sensor."],[1,"100,\n            0,"],[0,"\n      "],[-1,"  */\n"],[0,"      "],[-1,"  //% blockId=\"Read_LBolck\" block=\"get left IR data(trtuen 0~1024)\"\n        //% blockGap=15 weight=60                 //與下一個方塊的間隙及排重\n        export function Read_LBlock(): number {\n            basic.pause(100)\n            ADL_L ="],[1,"1023\n        ))\n       "],[0," pin"]],"start1":396,"start2":396,"length1":331,"length2":67},{"diffs":[[0,"     pins.analog"],[-1,"Read"],[1,"Write"],[0,"Pin(AnalogPin.P1"]],"start1":455,"start2":455,"length1":36,"length2":37},{"diffs":[[0,"n.P1"],[1,"5, 0"],[0,")\n    "],[-1," "],[1,"} else {\n"],[0,"       "],[1," "],[0,"pins."],[-1,"digital"],[1,"analog"],[0,"Writ"]],"start1":488,"start2":488,"length1":34,"length2":46},{"diffs":[[0,"Pin("],[-1,"Digital"],[1,"Analog"],[0,"Pin.P1"],[-1,"2, 1)\n            control.waitMicros(250)\n            ADH_L ="],[1,"6, 0)\n       "],[0," pin"]],"start1":535,"start2":535,"length1":82,"length2":33},{"diffs":[[0,"     pins.analog"],[-1,"Read"],[1,"Write"],[0,"Pin(AnalogPin.P1"]],"start1":560,"start2":560,"length1":36,"length2":37},{"diffs":[[0,"n.P1"],[-1,")\n            pins.digitalWritePin(DigitalPin.P12, 0)\n\n            Read_LIR = ADH_L - ADL_L;\n            return (Read_LIR)"],[1,"5, pins.map(\n            speed,\n            0,"],[0,"\n   "]],"start1":593,"start2":593,"length1":130,"length2":54},{"diffs":[[0," 0,\n        "],[-1,"}\n"],[0,"    "],[-1,"    /**"],[1,"-100,"],[0,"\n           "]],"start1":640,"start2":640,"length1":37,"length2":33},{"diffs":[[0,"    "],[-1,"*Determine if there are obstacles on the right side.\n            *@param thresholdR ; eg: 512\n            */\n        //% blockId=\"RBolck\" block=\"is the right IR over %thresholdR strength\"\n        //% thresholdR.min=0 thresholdR.max=1023\n        //% blockGap=5 weight=58\n        export function RBlock(thresholdR: number = 512): boolean {\n            basic.pause(100)\n            ADL_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 0)\n\n            if (((ADH_R - ADL_R) > thresholdR) && (pins.digitalReadPin(DigitalPin.P8) == 1)) {\n                //basic.showIcon(IconNames.House)\n                return (true)\n            } else {\n                //basic.showIcon(IconNames.Cow)\n                return (false)\n            }\n        }\n        /**\n        *Determine if there are obstacles on the left side.\n        *@param thresholdL ; eg: 512\n        */\n        //% blockId=\"LBolck\" block=\"is the left IR over %thresholdL strength\"\n        //% thresholdL.min=0 thresholdL.max=1023\n        //% blockGap=10 weight=57\n        export function LBlock(thresholdL: number = 512): boolean {\n            basic.pause(100)\n            ADL_L = pins.analogReadPin(AnalogPin.P1)\n            pins.digitalW"],[1,"0,\n            1023\n        ))\n    }\n}\n// Protocol:\n// Function,Value,Value\nbluetooth.onUartDataReceived(serial.delimiters(Delimiters.NewLine), function () {\n    rxData = bluetooth.uartReadUntil(serial.delimiters(Delimiters.NewLine))\n    serial.w"],[0,"rite"],[-1,"Pin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_L = 0\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) {\n                ADH_L = pins.analogReadPin(AnalogPin.P1)\n                pins.digitalWritePin(DigitalPin.P12, 0)\n            }\n            if ((ADH_L - ADL_L) > thresholdL) {//512) { \n                //basic.showIcon(IconNames.House)\n                return (true)\n            } else {\n                //basic.showIcon(IconNames.Cow)\n                return (false)\n            }\n        }\n\n\n        //輸出脈波\n        //% blockId=\"IRbolck\" block=\"Out pulse & show-04\"\n        //% blockGap=10 weight=55\n        //export function IRblock() {\n        //    ADL_L = pins.analogReadPin(AnalogPin.P1)\n        //    ADL_R = pins.analogReadPin(AnalogPin.P2)\n        //    pins.digitalWritePin(DigitalPin.P12, 1)\n        //    control.waitMicros(250)\n        //    ADH_L = pins.analogReadPin(AnalogPin.P1)\n        //    ADH_R = pins.analogReadPin(AnalogPin.P2)\n        //    pins.digitalWritePin(DigitalPin.P12, 0)\n\n        //    if ((ADH_L-ADL_L) > 512) { \n        //basic.showIcon(IconNames.House)\n        //        led.plot(0, 0)\n        //        led.unplot(0,4)\n        //    } else {\n        //basic.showIcon(IconNames.Cow)\n        //        led.plot(0, 4)\n        //        led.unplot(0,0)\n        //    }\n\n        //    if ((ADH_R-ADL_R) > 512"],[1,"Line(rxData)\n    rxString = rxData.split(\",\")\n    rxFunction = rxString[0]\n    if (rxFunction == \"V\") {\n\n    } else if (rxFunction == \"S\") {\n        walkSpeed = parseFloat(rxString[1])\n        turnSpeed = parseFloat(rxString[2])\n        tobbieTurn(turnSpeed)\n        tobbieWalk(walkSpeed)\n    } else if (rxFunction == \"T\""],[0,") {"],[-1," "],[0,"\n   "]],"start1":670,"start2":670,"length1":2762,"length2":582},{"diffs":[[0,"    "],[-1,"//basic.showIcon(IconNames.House)\n        //        led.plot(4, 0)\n        //        led.unplot(4, 4)\n        //"],[1,"displayText = rxString[1]\n "],[0,"   }"]],"start1":1253,"start2":1253,"length1":120,"length2":35},{"diffs":[[0,"        "],[-1,"//"],[0,"basic.sh"]],"start1":1296,"start2":1296,"length1":18,"length2":16},{"diffs":[[0,"mes."],[-1,"Cow)\n        //        led.plot(4, 4)\n        //        led.unplot(4,0)\n        //       }\n\n        //return(true)       \n        //}\n        /**\n        *Tobbie-II walks forward.\n        */\n        //% blockId=\"forward\" block=\"Tobbie-II walking forward\"\n        //% blockGap=3 weight=35\n        export function forward() {\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) {\n                pins.digitalWritePin(DigitalPin.P13, 1)\n                pins.digitalWritePin(DigitalPin.P14, 0)\n            }\n        }\n        /**\n        *Tobbie-II walks backward.\n        */\n        //% blockId=\"backward\" block=\"Tobbie-II walking backward\"\n        //% blockGap=3  weight=34\n        export function backward() {\n            if (Force !"],[1,"Heart)\n    }\n})\nfunction tobbieWalk(speed2: number) {\n    if (speed2 >"],[0,"= 0)"]],"start1":1325,"start2":1325,"length1":745,"length2":78},{"diffs":[[0,"        "],[-1,"        "],[0,"pins."],[-1,"digital"],[1,"analog"],[0,"WritePin"]],"start1":1406,"start2":1406,"length1":36,"length2":27},{"diffs":[[0,".analogWritePin("],[-1,"Digital"],[1,"Analog"],[0,"Pin.P13, 0)\n    "]],"start1":1418,"start2":1418,"length1":39,"length2":38},{"diffs":[[0,"13, "],[-1,"0)\n                pins.digitalWritePin(DigitalPin.P14, 1)\n                Force = Force - 1;"],[1,"pins.map(\n            speed2,"],[0,"\n   "]],"start1":1445,"start2":1445,"length1":101,"length2":37},{"diffs":[[0,"d2,\n            "],[-1,"}"],[1,"0,"],[0,"\n            if "]],"start1":1475,"start2":1475,"length1":33,"length2":34},{"diffs":[[0,"    "],[-1,"if (pins.digitalReadPin(DigitalPin.P8) == 1) { Force = 10 }\n\n        }\n        /**\n        *Tobbie-II stops walking.\n        */\n        //% blockId=\"stopwalk\" block=\"Tobbie-II stop walking\"\n        //% blockGap=10 weight=33\n        export function stopwalk() {\n   "],[1,"100,\n            0,\n            1023\n        ))\n"],[0,"        "],[-1," "],[0,"pins."],[-1,"digitalWritePin(DigitalPin.P13, 0)\n            pins.digital"],[1,"analog"],[0,"Writ"]],"start1":1502,"start2":1502,"length1":345,"length2":75},{"diffs":[[0,".analogWritePin("],[-1,"Digital"],[1,"Analog"],[0,"Pin.P14, 0)\n    "]],"start1":1566,"start2":1566,"length1":39,"length2":38},{"diffs":[[0,"    "],[-1,"    }\n        /**\n        *Tobbie-II rotates to the right.\n        */\n        //% blockId=\"rightward\" block=\"Tobbie-II turns right\"\n        //% blockGap=3  weight=32\n        export function rightward() {\n    "],[1,"} else {\n"],[0,"    "]],"start1":1600,"start2":1600,"length1":216,"length2":17},{"diffs":[[0," {\n        pins."],[-1,"digital"],[1,"analog"],[0,"WritePin(Digital"]],"start1":1610,"start2":1610,"length1":39,"length2":38},{"diffs":[[0,"logWritePin("],[-1,"Digital"],[1,"Analog"],[0,"Pin.P1"],[-1,"5"],[1,"3"],[0,", 0)\n       "]],"start1":1629,"start2":1629,"length1":38,"length2":37},{"diffs":[[0,"    "],[-1,"    "],[0,"pins."],[-1,"digitalWritePin(DigitalPin.P16, 1)\n            Motor_L = false\n            Motor_R = true\n        }\n        /**\n        *Tobbie-II rotates to the left.\n        */\n        //% blockId=\"leftward\" block=\"Tobbie-II turns left\"\n        //% blockGap=3  weight=31\n        export function leftward() {\n            pins.digital"],[1,"analog"],[0,"Writ"]],"start1":1663,"start2":1663,"length1":335,"length2":19},{"diffs":[[0,"Pin("],[-1,"Digital"],[1,"Analog"],[0,"Pin.P1"],[-1,"5, 1)\n            pins.digitalWritePin(DigitalPin.P16, 0)\n            Motor_L = true\n            Motor_R = false"],[1,"4, pins.map(\n            speed2,"],[0,"\n      "],[-1,"  }\n"],[0,"      "],[-1,"  /**"],[1,"0,"],[0,"\n   "]],"start1":1683,"start2":1683,"length1":155,"length2":67},{"diffs":[[0,"    "],[-1,"*Tobbie-II stops rotating.\n        */\n        //% blockId=\"stopturn\" block=\"Tobbie-II stops rotating.\"\n        //% blockGap=10 weight=30\n        export function stopturn() {\n            if (Motor_L || Motor_R) {\n                if (Motor_R) {\n                    pins.digitalWritePin(DigitalPin.P15, 1)\n                    pins.digitalWritePin(DigitalPin.P16, 0)\n                } else {\n                    pins.digitalWritePin(DigitalPin.P15, 0)\n                    pins.digitalWritePin(DigitalPin.P16, 1)\n                }\n                basic.pause(50)\n            }\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) {\n                pins.digitalWritePin(DigitalPin.P15, 0)\n                pins.digitalWritePin(DigitalPin.P16, 0)\n                Motor_L = false\n                Motor_R = false\n            }\n        }\n\n        /**\n           *Tobbie-II stamps his foot for a certain number of times.\n           *@param time describe parameter here, eg:5\n           */\n        //% blockId=\"vibrate\" block=\"Tobbie-II stamps %time times\"\n        //% time.min=1 time.max=100\n        //% blockGap=5 weight=25\n        //% advanced=true\n        export function vibrate(time: number): void {\n            for (let i = 0; i < time; i++) {\n                pins.digitalWritePin(DigitalPin.P13, 1)  //向前\n                pins.digitalWritePin(DigitalPin.P14, 0)\n                basic.pause(150)\n                pins.digitalWritePin(DigitalPin.P13, 0)  //向後\n                pins.digitalWritePin(DigitalPin.P14, 1)\n                basic.pause(150)\n            }\n            pins.digitalWritePin(DigitalPin.P13, 0)      //停止\n            pins.digitalWritePin(DigitalPin.P14, 0)\n        }\n        /**\n           *Tobbie-II shakes his head for a certain number of times.\n           *@param time describe parameter here, eg:5\n           */\n        //% blockId=\"shake_head\" block=\"Tobbie-II shakes head %time times\"\n        //% time.min=1 time.max=100\n        //% blockGap=5 weight=26\n        //% advanced=true\n        export function shake_head(time: number): void {\n            for (let i = 0; i < time; i++) {\n                pins.digitalWritePin(DigitalPin.P15, 1)  //左轉\n                pins.digitalWritePin(DigitalPin.P16, 0)\n                basic.pause(250)\n                pins.digitalWritePin(DigitalPin.P15, 0)  //右轉\n                pins.digitalWritePin(DigitalPin.P16, 1)\n                basic.pause(250)\n            }\n            pins.digitalWritePin(DigitalPin.P15, 0)      //停止行走\n            pins.digitalWritePin(DigitalPin.P16, 0)\n        }\n        /**\n            *Tobbie-II repeats the dance for for a certain number of times.\n            *@param time describe parameter here, eg:5\n            */\n        //% blockId=\"dance\" block=\"Tobbie-II dances %time times\"\n        //% time.min=1 time.max=100\n        //% blockGap=5 weight=24\n        //% advanced=true\n        export function dance(time: number): void {\n            for (let i = 0; i < time; i++) {\n                pins.digitalWritePin(DigitalPin.P13, 0)  //向後\n                pins.digitalWritePin(DigitalPin.P14, 1)\n                pins.digitalWritePin(DigitalPin.P15, 0)  //右轉\n                pins.digitalWritePin(Digital"],[1,"    -100,\n            0,\n            1023\n        ))\n    }\n}\nlet prevDisplayText = \"\"\nlet displayText = \"\"\nlet turnSpeed = 0\nlet walkSpeed = 0\nlet rxFunction = \"\"\nlet rxString: string[] = []\nlet rxData = \"\"\nbasic.showIcon(IconNames.SmallDiamond)\nbluetooth.startButtonService()\nbluetooth.startIOPinService()\nbluetooth.startAccelerometerService()\nbluetooth.startLEDService()\nbluetooth.startUartService()\npins.analogSetPeriod(Analog"],[0,"Pin.P1"],[-1,"6, 1)\n                basic.pause(250)\n                pins.digitalWritePin(DigitalPin.P13, 1)  //向前\n                pins.digitalWritePin(DigitalPin.P14, 0)\n                pins.digitalWritePin(DigitalPin.P15, 1)  //左轉\n                pins.digitalWritePin(DigitalPin.P16, 0)\n                basic.pause(250)\n            }\n            pins.digitalWritePin(DigitalPin.P13, 0)\n            pins.digitalWritePin(DigitalPin.P14, 0)\n            pins.digitalWritePin(DigitalPin.P15, 0)\n            pins.digitalWritePin(DigitalPin.P16, 0)\n        }\n        /**\n            *Tobbie II shows his mood on the face (APP only).\n            *@param RX_Data describe parameter here\n            */\n        //% blockId=\"BLE_DOT\" block=\"Tobbie II shows mood on face(APP only) %RX_Data\"\n        //% blockGap=5 weight=23\n        //% advanced=true\n        export function drawface(RX_Data: string): void {\n            basic.clearScreen()\n            for (let PY = 0; PY <= 4; PY++) {\n                let PLOT_DATA: number = parseInt(RX_Data.substr(PY * 2 + 1, 2))\n                for (let PX = 0; PX <= 4; PX++) {\n                    if (PLOT_DATA % 2 == 1) {\n                        led.plot(PX, PY)\n                        PLOT_DATA = PLOT_DATA - 1\n                    }\n                    PLOT_DATA = PLOT_DATA / 2\n                }\n            }\n        }\n    }"],[1,"3, 1000)\npins.analogSetPeriod(AnalogPin.P14, 1000)\npins.analogSetPeriod(AnalogPin.P15, 1000)\npins.analogSetPeriod(AnalogPin.P16, 1000)\nbasic.showIcon(IconNames.Diamond)\nbasic.forever(function () {\n    if (prevDisplayText != displayText) {\n        prevDisplayText = displayText\n        basic.clearScreen()\n        basic.showString(\"\" + (displayText))\n        basic.pause(500)\n    }\n})\n"]],"start1":1751,"start2":1751,"length1":4538,"length2":823}]}]},{"timestamp":1739603136508,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"     }\n    }"],[-1,"\n    "]],"start1":13348,"start2":13348,"length1":17,"length2":12}]}]},{"timestamp":1739603142003,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"bluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Yes)\n"],[0,"    namespac"]],"start1":0,"start2":0,"length1":12,"length2":91},{"diffs":[[0,"    "],[-1,"    // Tutaj funkcja Bluetooth MUSI BYĆ OSOBNO\n            bluetooth.onBluetoothConnected(function () {\n                basic.showIcon(IconNames.Yes);\n                // Możesz tutaj użyć funkcji z `Tobbie`, np.:\n                Tobbie.drawface(\"FF00FF\");\n            });\n"],[1,"}"],[0,"\n    }\n"],[-1,"} "],[0,"    "]],"start1":13349,"start2":13349,"length1":289,"length2":16}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"Tobbie"],[1,"-II-Test"],[0,"\",\n    \""]],"start1":13,"start2":13,"length1":16,"length2":24},{"diffs":[[0,".ts\""],[-1,",\n        \"main.py\""],[0,"\n   "]],"start1":185,"start2":185,"length1":27,"length2":8},{"diffs":[[0,"st\":"],[-1," 0,\n                    \"event_service\":"],[0," 0\n "]],"start1":586,"start2":586,"length1":48,"length2":8}]},{"type":"added","filename":"main.py","value":"@namespace\nclass Tobbie:\n    ADL_R: number = 0\n    ADH_R: number = 0\n    ADL_L: number = 0\n    ADH_L: number = 0\n    Read_LIR: number = 0\n    Read_RIR: number = 0\n    event_src_ir = 12\n    event_ir_sensor = 1\n    Motor_R: bool = False\n    Motor_L: bool = False\n    PX: number = 0\n    PY: number = 0\n    Force: number = 10\n    def IR_sensorL(irdataL: number):\n        # 此為中斷觸發方塊\n        \n        def on_in_background():\n            flag = False\n            last_flag = False\n            while True:\n                ob: bool = LBlock()\n                if ob:\n                    flag = True\n                else:\n                    flag = False\n                if flag != last_flag:\n                    # 300ms\n                    if flag:\n                        control.raise_event(event_src_ir, event_ir_sensor)\n                        basic.pause(300)\n                    last_flag = flag\n                basic.pause(1)\n        control.in_background(on_in_background)\n        \n    # \n    # 背景執行紅外線測距\n    # @param irdata_Set ; eg: 512\n    # \n    # //% blockId=\"IR_EVENTL\" block=\"ON obstacles on the left: |%irdata_Set\"\n    # //% irdata_Set.min=0 irdata_Set.max=1023\n    # //% blockGap=10 weight=99   //代表其重要性，越重放越高\n    # export function onIRL(irdata_Set: number = 512, handler: Action) {\n    # IR_sensorL(irdata_Set);\n    # control.onEvent(event_src_ir, event_ir_sensor, handler); \n    # }\n    # function IR_sensorR(irdata: number) { \n    # control.inBackground(() => {\n    # let flag = false\n    # let last_flag = false\n    # while (true) {\n    # let ob: boolean = LBlock();\n    # if(ob){flag=true}else{flag=false}\n    # if (flag != last_flag) {\n    # if (flag) { \n    # control.raiseEvent(event_src_ir, event_ir_sensor)\n    # basic.pause(3)\n    # }\n    # last_flag = flag\n    # }\n    # basic.pause(1)\n    # }   \n    # }      \n    # )\n    # }\n    \"\"\"\n    Read the value sensed by the right side of the infrared sensor.\n    \n    \"\"\"\n    # % blockId=\"Read_RBolck\" block=\"get right IR data(return 0~1024)\"\n    # % blockGap=5 weight=65                 //與下一個方塊的間隙及排重\n    def Read_RBlock():\n        global ADL_R, ADH_R, Read_RIR\n        basic.pause(100)\n        ADL_R = pins.analog_read_pin(AnalogPin.P2)\n        pins.digital_write_pin(DigitalPin.P12, 1)\n        control.wait_micros(250)\n        ADH_R = pins.analog_read_pin(AnalogPin.P2)\n        pins.digital_write_pin(DigitalPin.P12, 0)\n        if pins.digital_read_pin(DigitalPin.P8) == 1:\n            Read_RIR = ADH_R - ADL_R\n        return (Read_RIR)\n    \"\"\"\n    Read the value sensed by the left side of the infrared sensor.\n    \n    \"\"\"\n    # % blockId=\"Read_LBolck\" block=\"get left IR data(trtuen 0~1024)\"\n    # % blockGap=15 weight=60                 //與下一個方塊的間隙及排重\n    def Read_LBlock():\n        global ADL_L, ADH_L, Read_LIR\n        basic.pause(100)\n        ADL_L = pins.analog_read_pin(AnalogPin.P1)\n        pins.digital_write_pin(DigitalPin.P12, 1)\n        control.wait_micros(250)\n        ADH_L = pins.analog_read_pin(AnalogPin.P1)\n        pins.digital_write_pin(DigitalPin.P12, 0)\n        Read_LIR = ADH_L - ADL_L\n        return (Read_LIR)\n    \"\"\"\n    \n    Determine if there are obstacles on the right side.\n    @param thresholdR ; eg: 512\n    \n    \"\"\"\n    # % blockId=\"RBolck\" block=\"is the right IR over %thresholdR strength\"\n    # % thresholdR.min=0 thresholdR.max=1023\n    # % blockGap=5 weight=58\n    def RBlock(thresholdR: number = 512):\n        global ADL_R, ADH_R\n        basic.pause(100)\n        ADL_R = pins.analog_read_pin(AnalogPin.P2)\n        pins.digital_write_pin(DigitalPin.P12, 1)\n        control.wait_micros(250)\n        ADH_R = pins.analog_read_pin(AnalogPin.P2)\n        pins.digital_write_pin(DigitalPin.P12, 0)\n        if ((ADH_R - ADL_R) > thresholdR) and (pins.digital_read_pin(DigitalPin.P8) == 1):\n            # basic.showIcon(IconNames.House)\n            return (True)\n        else:\n            # basic.showIcon(IconNames.Cow)\n            return (False)\n    \"\"\"\n    \n    Determine if there are obstacles on the left side.\n    @param thresholdL ; eg: 512\n    \n    \"\"\"\n    # % blockId=\"LBolck\" block=\"is the left IR over %thresholdL strength\"\n    # % thresholdL.min=0 thresholdL.max=1023\n    # % blockGap=10 weight=57\n    def LBlock(thresholdL: number = 512):\n        global ADL_L, ADH_L\n        basic.pause(100)\n        ADL_L = pins.analog_read_pin(AnalogPin.P1)\n        pins.digital_write_pin(DigitalPin.P12, 1)\n        control.wait_micros(250)\n        ADH_L = 0\n        if pins.digital_read_pin(DigitalPin.P8) == 1:\n            ADH_L = pins.analog_read_pin(AnalogPin.P1)\n            pins.digital_write_pin(DigitalPin.P12, 0)\n        if (ADH_L - ADL_L) > thresholdL:\n            # 512) { \n            # basic.showIcon(IconNames.House)\n            return (True)\n        else:\n            # basic.showIcon(IconNames.Cow)\n            return (False)\n    # 輸出脈波\n    # % blockId=\"IRbolck\" block=\"Out pulse & show-04\"\n    # % blockGap=10 weight=55\n    # export function IRblock() {\n    # ADL_L = pins.analogReadPin(AnalogPin.P1)\n    # ADL_R = pins.analogReadPin(AnalogPin.P2)\n    # pins.digitalWritePin(DigitalPin.P12, 1)\n    # control.waitMicros(250)\n    # ADH_L = pins.analogReadPin(AnalogPin.P1)\n    # ADH_R = pins.analogReadPin(AnalogPin.P2)\n    # pins.digitalWritePin(DigitalPin.P12, 0)\n    # if ((ADH_L-ADL_L) > 512) { \n    # basic.showIcon(IconNames.House)\n    # led.plot(0, 0)\n    # led.unplot(0,4)\n    # } else {\n    # basic.showIcon(IconNames.Cow)\n    # led.plot(0, 4)\n    # led.unplot(0,0)\n    # }\n    # if ((ADH_R-ADL_R) > 512) { \n    # basic.showIcon(IconNames.House)\n    # led.plot(4, 0)\n    # led.unplot(4, 4)\n    # } else {\n    # basic.showIcon(IconNames.Cow)\n    # led.plot(4, 4)\n    # led.unplot(4,0)\n    # }\n    # return(true)       \n    # }\n    \"\"\"\n    \n    Tobbie-II walks forward.\n    \n    \"\"\"\n    # % blockId=\"forward\" block=\"Tobbie-II walking forward\"\n    # % blockGap=3 weight=35\n    def forward():\n        if pins.digital_read_pin(DigitalPin.P8) == 1:\n            pins.digital_write_pin(DigitalPin.P13, 1)\n            pins.digital_write_pin(DigitalPin.P14, 0)\n    \"\"\"\n    \n    Tobbie-II walks backward.\n    \n    \"\"\"\n    # % blockId=\"backward\" block=\"Tobbie-II walking backward\"\n    # % blockGap=3  weight=34\n    def backward():\n        global Force\n        if Force != 0:\n            pins.digital_write_pin(DigitalPin.P13, 0)\n            pins.digital_write_pin(DigitalPin.P14, 1)\n            Force = Force - 1\n        if pins.digital_read_pin(DigitalPin.P8) == 1:\n            Force = 10\n    \"\"\"\n    \n    Tobbie-II stops walking.\n    \n    \"\"\"\n    # % blockId=\"stopwalk\" block=\"Tobbie-II stop walking\"\n    # % blockGap=10 weight=33\n    def stopwalk():\n        pins.digital_write_pin(DigitalPin.P13, 0)\n        pins.digital_write_pin(DigitalPin.P14, 0)\n    \"\"\"\n    \n    Tobbie-II rotates to the right.\n    \n    \"\"\"\n    # % blockId=\"rightward\" block=\"Tobbie-II turns right\"\n    # % blockGap=3  weight=32\n    def rightward():\n        global Motor_L, Motor_R\n        pins.digital_write_pin(DigitalPin.P15, 0)\n        pins.digital_write_pin(DigitalPin.P16, 1)\n        Motor_L = False\n        Motor_R = True\n    \"\"\"\n    \n    Tobbie-II rotates to the left.\n    \n    \"\"\"\n    # % blockId=\"leftward\" block=\"Tobbie-II turns left\"\n    # % blockGap=3  weight=31\n    def leftward():\n        global Motor_L, Motor_R\n        pins.digital_write_pin(DigitalPin.P15, 1)\n        pins.digital_write_pin(DigitalPin.P16, 0)\n        Motor_L = True\n        Motor_R = False\n    \"\"\"\n    \n    Tobbie-II stops rotating.\n    \n    \"\"\"\n    # % blockId=\"stopturn\" block=\"Tobbie-II stops rotating.\"\n    # % blockGap=10 weight=30\n    def stopturn():\n        global Motor_L, Motor_R\n        if Motor_L or Motor_R:\n            if Motor_R:\n                pins.digital_write_pin(DigitalPin.P15, 1)\n                pins.digital_write_pin(DigitalPin.P16, 0)\n            else:\n                pins.digital_write_pin(DigitalPin.P15, 0)\n                pins.digital_write_pin(DigitalPin.P16, 1)\n            basic.pause(50)\n        if pins.digital_read_pin(DigitalPin.P8) == 1:\n            pins.digital_write_pin(DigitalPin.P15, 0)\n            pins.digital_write_pin(DigitalPin.P16, 0)\n            Motor_L = False\n            Motor_R = False\n    \"\"\"\n    \n    Tobbie-II stamps his foot for a certain number of times.\n    @param time describe parameter here, eg:5\n    \n    \"\"\"\n    # % blockId=\"vibrate\" block=\"Tobbie-II stamps %time times\"\n    # % time.min=1 time.max=100\n    # % blockGap=5 weight=25\n    # % advanced=true\n    def vibrate(time: number):\n        for i in range(time):\n            pins.digital_write_pin(DigitalPin.P13, 1)\n            # 向前\n            pins.digital_write_pin(DigitalPin.P14, 0)\n            basic.pause(150)\n            pins.digital_write_pin(DigitalPin.P13, 0)\n            # 向後\n            pins.digital_write_pin(DigitalPin.P14, 1)\n            basic.pause(150)\n        pins.digital_write_pin(DigitalPin.P13, 0)\n        # 停止\n        pins.digital_write_pin(DigitalPin.P14, 0)\n    \"\"\"\n    \n    Tobbie-II shakes his head for a certain number of times.\n    @param time describe parameter here, eg:5\n    \n    \"\"\"\n    # % blockId=\"shake_head\" block=\"Tobbie-II shakes head %time times\"\n    # % time.min=1 time.max=100\n    # % blockGap=5 weight=26\n    # % advanced=true\n    def shake_head(time2: number):\n        for j in range(time2):\n            pins.digital_write_pin(DigitalPin.P15, 1)\n            # 左轉\n            pins.digital_write_pin(DigitalPin.P16, 0)\n            basic.pause(250)\n            pins.digital_write_pin(DigitalPin.P15, 0)\n            # 右轉\n            pins.digital_write_pin(DigitalPin.P16, 1)\n            basic.pause(250)\n        pins.digital_write_pin(DigitalPin.P15, 0)\n        # 停止行走\n        pins.digital_write_pin(DigitalPin.P16, 0)\n    \"\"\"\n    \n    Tobbie-II repeats the dance for for a certain number of times.\n    @param time describe parameter here, eg:5\n    \n    \"\"\"\n    # % blockId=\"dance\" block=\"Tobbie-II dances %time times\"\n    # % time.min=1 time.max=100\n    # % blockGap=5 weight=24\n    # % advanced=true\n    def dance(time3: number):\n        for k in range(time3):\n            pins.digital_write_pin(DigitalPin.P13, 0)\n            # 向後\n            pins.digital_write_pin(DigitalPin.P14, 1)\n            pins.digital_write_pin(DigitalPin.P15, 0)\n            # 右轉\n            pins.digital_write_pin(DigitalPin.P16, 1)\n            basic.pause(250)\n            pins.digital_write_pin(DigitalPin.P13, 1)\n            # 向前\n            pins.digital_write_pin(DigitalPin.P14, 0)\n            pins.digital_write_pin(DigitalPin.P15, 1)\n            # 左轉\n            pins.digital_write_pin(DigitalPin.P16, 0)\n            basic.pause(250)\n        pins.digital_write_pin(DigitalPin.P13, 0)\n        pins.digital_write_pin(DigitalPin.P14, 0)\n        pins.digital_write_pin(DigitalPin.P15, 0)\n        pins.digital_write_pin(DigitalPin.P16, 0)\n    \"\"\"\n    \n    Tobbie II shows his mood on the face (APP only).\n    @param RX_Data describe parameter here\n    \n    \"\"\"\n    # % blockId=\"BLE_DOT\" block=\"Tobbie II shows mood on face(APP only) %RX_Data\"\n    # % blockGap=5 weight=23\n    # % advanced=true\n    def drawface(RX_Data: str):\n        basic.clear_screen()\n        for PY2 in range(5):\n            PLOT_DATA: number = int(RX_Data.substr(PY2 * 2 + 1, 2))\n            for PX2 in range(5):\n                if PLOT_DATA % 2 == 1:\n                    led.plot(PX2, PY2)\n                    PLOT_DATA = PLOT_DATA - 1\n                PLOT_DATA = PLOT_DATA / 2\n        # Tutaj funkcja Bluetooth MUSI BYĆ OSOBNO\n        \n        def on_bluetooth_connected():\n            basic.show_icon(IconNames.YES)\n            # Możesz tutaj użyć funkcji z `Tobbie`, np.:\n            Tobbie.drawface(\"FF00FF\")\n        bluetooth.on_bluetooth_connected(on_bluetooth_connected)\n        "}]},{"timestamp":1739603747879,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"\": ["],[-1,"\n        \"test.ts\"\n    "],[0,"],\n "]],"start1":222,"start2":222,"length1":31,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tu są testy; nie będzie to kompilowane, gdy ten pakiet będzie używany jako rozszerzenie.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1739601703044,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</variable><variable id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</variable><variable id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</variable><variable id=\"(68V9h#p,`K$-0g{f^F#\">walkSpeed</variable><variable id=\"079BJ/1L%k(R`ft3vY#(\">turnSpeed</variable><variable id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</variable><variable id=\"#p1$w}[5XLX(O/W1=F@-\">prevDisplayText</variable></variables><block type=\"pxt-on-start\" id=\"XuD+n=~+ZE:^*BV`Q-pj\" x=\"20\" y=\"20\"><statement name=\"HANDLER\"><block type=\"basic_show_icon\" id=\"Q3cRl^4YlrZiL*BR}F|K\"><field name=\"i\">IconNames.SmallDiamond</field><next><block type=\"bluetooth_start_button_service\" id=\"FeBL$)k:RJ3W-@z8^`%w\"><next><block type=\"bluetooth_start_io_pin_service\" id=\"-$?SD%Z=6zB:*%j-/YoX\"><next><block type=\"bluetooth_start_accelerometer_service\" id=\"fyE9Oy0g/GfS!Ko:@$.R\"><next><block type=\"bluetooth_start_led_service\" id=\"N/RAhp[/),_SLJ%{5fGT\"><next><block type=\"bluetooth_start_uart_service\" id=\";EQBmf#!H%R=*]/TaDHY\"><next><block type=\"device_set_analog_period\" id=\"K*Jx$~f_?#n;o6H+Mo+3\"><field name=\"pin\">AnalogPin.P13</field><value name=\"micros\"><shadow type=\"math_number\" id=\"y3)8^Gefqj$Cf[x7CL`g\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"device_set_analog_period\" id=\"2b?b(QkOaW{j[|1`9g|R\"><field name=\"pin\">AnalogPin.P14</field><value name=\"micros\"><shadow type=\"math_number\" id=\"jGLDr;HKSBaqY2Tw0Zdg\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"device_set_analog_period\" id=\"fY3FQe**1zX]Wv1?RRqj\"><field name=\"pin\">AnalogPin.P15</field><value name=\"micros\"><shadow type=\"math_number\" id=\";{2QXNO1NcQn-~X=9aki\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"device_set_analog_period\" id=\"Mp$H=r:ooQ?Bc+Q!1Ol[\"><field name=\"pin\">AnalogPin.P16</field><value name=\"micros\"><shadow type=\"math_number\" id=\"RMb~U%|QDhIj,XFYvKJT\"><field name=\"NUM\">1000</field></shadow></value><next><block type=\"basic_show_icon\" id=\"A[_%xQw2NAhOwga}=L7b\"><field name=\"i\">IconNames.Diamond</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"bluetooth_on_connected\" id=\"Vg_II:,(X3u9Fv{$+63C\" x=\"652\" y=\"20\"><statement name=\"HANDLER\"><block type=\"basic_show_icon\" id=\"jYEQQxMIeSzT_gU(f7hC\"><field name=\"i\">IconNames.Yes</field></block></statement></block><block type=\"bluetooth_on_data_received\" id=\"sCg|4#5I(.ZH-hKF=NAA\" x=\"941\" y=\"20\"><comment pinned=\"false\" h=\"80\" w=\"160\" relx=\"10\" rely=\"10\">Protocol:\nFunction,Value,Value</comment><value name=\"delimiters\"><shadow type=\"serial_delimiter_conv\" id=\"P-$R/)k4rB5M4}2Z`C|)\"><field name=\"del\">Delimiters.NewLine</field></shadow></value><statement name=\"HANDLER\"><block type=\"variables_set\" id=\"aPxBKp~X9sHh)43;v{5J\"><field name=\"VAR\" id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"bluetooth_uart_read\" id=\"5;[a(V}79:-a=?a%Y~$)\"><value name=\"del\"><shadow type=\"serial_delimiter_conv\" id=\"XD]QN2%m~OC3q}{MY|@y\"><field name=\"del\">Delimiters.NewLine</field></shadow></value></block></value><next><block type=\"serial_writeline\" id=\"W+m`=@snXk#?ton3T^?P\"><value name=\"text\"><block type=\"variables_get\" id=\"V#Kt,]4GvAX@7wQ=5%|Y\"><field name=\"VAR\" id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</field></block></value><next><block type=\"variables_set\" id=\"Z=VGX}{ZGciDVS@+.+oE\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field><value name=\"VALUE\"><block type=\"string_split\" id=\"qv0591%K]:_S8K]4Vp[;\"><value name=\"this\"><shadow type=\"text\" id=\"!h35qh@X:uQZlMC;#wXY\"><field name=\"TEXT\">this</field></shadow><block type=\"variables_get\" id=\"qp]ge{x|?aZi4v0,.:9I\"><field name=\"VAR\" id=\"W;?k[P;cpVBRPwg4_j+*\">rxData</field></block></value><value name=\"separator\"><shadow type=\"text\" id=\"j.L7w`vu85]bvI1dx2+k\"><field name=\"TEXT\">,</field></shadow></value></block></value><next><block type=\"variables_set\" id=\"h1k~L__EWDW{B#*beumd\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\" id=\"Q6chWqLQoO;X82%-Sx{r\"><value name=\"LIST\"><block type=\"variables_get\" id=\"m8H75F/L3;*69!0ljW6h\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"`V=(z%anWg0;jP$2gGR4\"><field name=\"NUM\">0</field></shadow></value></block></value><next><block type=\"controls_if\" id=\"LnU3R[*$lSotm=!t,$[E\"><mutation elseif=\"2\" else=\"1\"/><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"{ukYX:FS)bX_:Ku$6rdO\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"yJKF+y+cpF7LT+-be(er\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"DgYhq~A2L8mK66%e;#}!\"><field name=\"TEXT\">V</field></block></value></block></value><value name=\"IF1\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"RSl{[K4c#LiwZw6s1I?.\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"asTbHT[TYkLZkVev)AVC\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"AKDLZf]B$@-.~)L63?PQ\"><field name=\"TEXT\">S</field></block></value></block></value><statement name=\"DO1\"><block type=\"variables_set\" id=\"oorKFF?!t291nI:qj2N-\"><field name=\"VAR\" id=\"(68V9h#p,`K$-0g{f^F#\">walkSpeed</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"string_parsefloat\" id=\"5b|n6q3X[3I-CL:qFSg}\"><value name=\"text\"><block type=\"lists_index_get\" id=\"mCl?1b7s*Dw/?KrG`mz4\"><value name=\"LIST\"><block type=\"variables_get\" id=\"KVz_Ux1y!q2dd+e`X_k}\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"h75q8wDf$,ghL]]n~=A|\"><field name=\"NUM\">1</field></shadow></value></block></value></block></value><next><block type=\"variables_set\" id=\"@.Cc=+/7=O4e]QH`YHlW\"><field name=\"VAR\" id=\"079BJ/1L%k(R`ft3vY#(\">turnSpeed</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"string_parsefloat\" id=\"gcYG#p/65Ksc7B9)d!^E\"><value name=\"text\"><block type=\"lists_index_get\" id=\"s#wa8|AyC=?c0`MI(f}x\"><value name=\"LIST\"><block type=\"variables_get\" id=\"P]WkV`Cq4CM:gu%2Xqtg\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"UK:/StQsOafex+yD:ZQe\"><field name=\"NUM\">2</field></shadow></value></block></value></block></value><next><block type=\"function_call\" id=\"+{/g3I_z*]LK~*9_[G*a\"><mutation name=\"tobbieTurn\" functionid=\"LFnxMS}D_7Tm]bFQ`_Cx\"><arg name=\"speed\" id=\"2rvn17p2f6rwf68khs5q\" type=\"number\"/></mutation><value name=\"2rvn17p2f6rwf68khs5q\"><shadow type=\"math_number\" id=\"zElg|jlUot)Xucq=1goc\"><field name=\"NUM\">1</field></shadow><block type=\"variables_get\" id=\"jHt_s)B@N}UC]8K-:B!I\"><field name=\"VAR\" id=\"079BJ/1L%k(R`ft3vY#(\">turnSpeed</field></block></value><next><block type=\"function_call\" id=\"{/;uI1OlwY0cb{?)4_6@\"><mutation name=\"tobbieWalk\" functionid=\"roz?6|[V[l{Cfyq8ev*Z\"><arg name=\"speed2\" id=\"x4s4zhe4wzjcrgt1r5lz\" type=\"number\"/></mutation><value name=\"x4s4zhe4wzjcrgt1r5lz\"><shadow type=\"math_number\" id=\"x/w|Onl,XyYv9|#FwL8J\"><field name=\"NUM\">1</field></shadow><block type=\"variables_get\" id=\"eR@CAQh$u~b,BRr[_12d\"><field name=\"VAR\" id=\"(68V9h#p,`K$-0g{f^F#\">walkSpeed</field></block></value></block></next></block></next></block></next></block></statement><value name=\"IF2\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"_Vi#,[.suC6:|fYSCilU\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"(Uhk7:+g^UVwPuvTX*]k\"><field name=\"VAR\" id=\"t4;bxLPk!25{_x0?QohX\">rxFunction</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"text\" id=\"}w?E;iy-6WzX}Oux85=#\"><field name=\"TEXT\">T</field></block></value></block></value><statement name=\"DO2\"><block type=\"variables_set\" id=\"fBaL3JiEG-/~{]H5x`Gn\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"lists_index_get\" id=\"u8S8CyZ.:Mkt+p*5{rix\"><value name=\"LIST\"><block type=\"variables_get\" id=\"Dxi~iO=oiCtJvuM7#`v3\"><field name=\"VAR\" id=\"i8DaEQ`MQp/g`T_r/;nc\">rxString</field></block></value><value name=\"INDEX\"><shadow type=\"math_number\" id=\"Ej%O)-Sx|#~HLWXvUf-3\"><field name=\"NUM\">1</field></shadow></value></block></value></block></statement><statement name=\"ELSE\"><block type=\"basic_show_icon\" id=\"Y1Zy9I$b~,~Mr`FD.:/s\"><field name=\"i\">IconNames.Heart</field></block></statement></block></next></block></next></block></next></block></next></block></statement></block><block type=\"bluetooth_on_disconnected\" id=\"D^d:T$5]Y,L`:Ik8Nwpy\" x=\"1766\" y=\"20\"><statement name=\"HANDLER\"><block type=\"basic_show_icon\" id=\"JQMZOXFuo(%JV|e}qRV#\"><field name=\"i\">IconNames.Diamond</field><next><block type=\"function_call\" id=\"p-VsiWQn;[b-u7Ghbj(k\"><mutation name=\"tobbieTurn\" functionid=\"LFnxMS}D_7Tm]bFQ`_Cx\"><arg name=\"speed\" id=\"2rvn17p2f6rwf68khs5q\" type=\"number\"/></mutation><value name=\"2rvn17p2f6rwf68khs5q\"><shadow type=\"math_number\" id=\"Bx5f`hVSY~k.s0MRm]8f\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"function_call\" id=\"G[R+)tf+!5pLOz-eq7J)\"><mutation name=\"tobbieWalk\" functionid=\"roz?6|[V[l{Cfyq8ev*Z\"><arg name=\"speed2\" id=\"x4s4zhe4wzjcrgt1r5lz\" type=\"number\"/></mutation><value name=\"x4s4zhe4wzjcrgt1r5lz\"><shadow type=\"math_number\" id=\"rL)VA4lkU|gm7zrc+jWe\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></statement></block><block type=\"device_forever\" id=\"^?4qKdMF[K)R|:8PF+@_\" x=\"2074\" y=\"20\"><statement name=\"HANDLER\"><block type=\"controls_if\" id=\"[vVXsJInwVS^m4Mv14OS\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"A@3-LhU3Aa{D=iK$a9Gh\"><field name=\"OP\">NEQ</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"UZ{s+N];IaAa8nIJ/9]/\"><field name=\"VAR\" id=\"#p1$w}[5XLX(O/W1=F@-\">prevDisplayText</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"2N8T^7XiuU))AJ}9RH}|\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"6NdZBCK)vz5yE|qexiq9\"><field name=\"VAR\" id=\"#p1$w}[5XLX(O/W1=F@-\">prevDisplayText</field><value name=\"VALUE\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"KKige1|tX}]!:VEQ])gQ\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field></block></value><next><block type=\"device_clear_display\" id=\"O0.*D}$.AkP@7C6YW#lH\"><next><block type=\"device_print_message\" id=\"-Sr$Mob?,Dc~4X?bHBoW\"><value name=\"text\"><shadow type=\"text\"><field name=\"TEXT\"/></shadow><block type=\"variables_get\" id=\"L*{Z6@4fp}cX1iGjyd*Q\"><field name=\"VAR\" id=\"fj;,-?Yg4px7^Dm3;RL=\">displayText</field></block></value><next><block type=\"device_pause\" id=\"Jy;rF-oxt-RipuypLns9\"><value name=\"pause\"><shadow type=\"timePicker\" id=\":`zYS}oKfm5rDuHe.YG]\"><field name=\"ms\">500</field></shadow></value></block></next></block></next></block></next></block></statement></block></statement></block><block type=\"function_definition\" id=\"1AJ+-Y$sLOPxCK99{M3S\" x=\"20\" y=\"967\"><mutation name=\"tobbieWalk\" functionid=\"roz?6|[V[l{Cfyq8ev*Z\"><arg name=\"speed2\" id=\"x4s4zhe4wzjcrgt1r5lz\" type=\"number\"/></mutation><field name=\"function_name\">tobbieWalk</field><value name=\"x4s4zhe4wzjcrgt1r5lz\"><shadow type=\"argument_reporter_number\" id=\"pQ:l+IqwjxmYl-F.`biy\"><field name=\"VALUE\">speed2</field></shadow></value><statement name=\"STACK\"><block type=\"controls_if\" id=\"D6.!OgO}lTj(V7%iIq6*\"><mutation else=\"1\"/><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"dqwH::9;,@tAD6x0m*LP\"><field name=\"OP\">GTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"aozd~b7c!EOxx_WfRp6)\"><field name=\"VALUE\">speed2</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"YNL@IS,QJ^S$^b,eW[zm\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_analog_pin\" id=\"l!=1S$#,h;u5qgyzRDy}\"><field name=\"name\">AnalogPin.P13</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"D^nd8Yk}7.1*xzM!XN-U\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"uC2yoT3@dx#=|D(%F2Z`\"><field name=\"VALUE\">speed2</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"NGp8S@3Qjn9+?b)8VCXQ\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"[9|z]o-_Re[[^{5p`ZCJ\"><field name=\"NUM\">100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"L~57;aBpr5?I$7[/zl~*\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"_c7Um#~/OEBrkl|c4F$4\"><field name=\"NUM\">1023</field></shadow></value></block></value><next><block type=\"device_set_analog_pin\" id=\"zVr)BRQ8=,[M*gRjb[n*\"><field name=\"name\">AnalogPin.P14</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"mL^m4U3)U^|3u%{Hp)Wr\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_analog_pin\" id=\"h7U$[HB3f(CZP4;5VNfl\"><field name=\"name\">AnalogPin.P13</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"*hTW;7GGnVK#4I+`,$[w\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_analog_pin\" id=\"u6g8,ntY_hn/s^.XT@,|\"><field name=\"name\">AnalogPin.P14</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"W%8,i}2{ULy?/d%OD}yE\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"-ZC;cmB;AT#B~acxQ(uN\"><field name=\"VALUE\">speed2</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"tQ5Kwld6QPja=4)4t?9$\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"7RS5C!VszKfw0:-qI0mq\"><field name=\"NUM\">-100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"I}t~JL;v(l0w=Cu5K{qp\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"FBwO,2[XR#AQUG7lm%K1\"><field name=\"NUM\">1023</field></shadow></value></block></value></block></next></block></statement></block></statement></block><block type=\"function_definition\" id=\"zA]pwx5TNSLA8^r)Cq?m\" x=\"871\" y=\"967\"><mutation name=\"tobbieTurn\" functionid=\"LFnxMS}D_7Tm]bFQ`_Cx\"><arg name=\"speed\" id=\"2rvn17p2f6rwf68khs5q\" type=\"number\"/></mutation><field name=\"function_name\">tobbieTurn</field><value name=\"2rvn17p2f6rwf68khs5q\"><shadow type=\"argument_reporter_number\" id=\"t1vW^):v@D:a{0jZhe9t\"><field name=\"VALUE\">speed</field></shadow></value><statement name=\"STACK\"><block type=\"controls_if\" id=\"ZK*dI~(J{MJ3YYH{nBd1\"><mutation else=\"1\"/><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"Qg22_bN.L}*y$Y`q12FO\"><field name=\"OP\">GTE</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"argument_reporter_number\" id=\"!7!IC9Y?{#5z+{Q}6[(k\"><field name=\"VALUE\">speed</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"(^6h7QPk3_Y2w!@8_H6P\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_analog_pin\" id=\"IoPH},xd-0w8Vf+Z;msA\"><field name=\"name\">AnalogPin.P16</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"gyIsyOuM[T:o/Ng6_i/K\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"iED`;-RFscd(oMU{?+.j\"><field name=\"VALUE\">speed</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"khaxi86M13a|szy7NQ{(\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"f+=92S@qdkNB?p$wWa~c\"><field name=\"NUM\">100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"|p}qY+$Nj/u0p2y(z.p[\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"3db,?Yr$dIfZHgK}xN@j\"><field name=\"NUM\">1023</field></shadow></value></block></value><next><block type=\"device_set_analog_pin\" id=\"dlSd2Jeu7:xKI{D{BHFg\"><field name=\"name\">AnalogPin.P15</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"nsF,=_i-/MB+nZP|dv(e\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value></block></next></block></statement><statement name=\"ELSE\"><block type=\"device_set_analog_pin\" id=\"(Z~-Fk@rCZS~b4M)@UuS\"><field name=\"name\">AnalogPin.P16</field><value name=\"value\"><shadow type=\"math_number_minmax\" id=\"hl=;o}t77K}F8@MB8RHI\"><mutation min=\"0\" max=\"1023\" label=\"Number\" precision=\"0\"/><field name=\"SLIDER\">0</field></shadow></value><next><block type=\"device_set_analog_pin\" id=\"sLQKn%zMLQHmHTb9+F0G\"><field name=\"name\">AnalogPin.P15</field><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1023\"/><field name=\"SLIDER\">0</field></shadow><block type=\"pin_map\" id=\"Ub4xv75ScXIE$QT)fAMi\"><value name=\"value\"><block type=\"argument_reporter_number\" id=\"6kOUxqGs.)T.Y6N^wID}\"><field name=\"VALUE\">speed</field></block></value><value name=\"fromLow\"><shadow type=\"math_number\" id=\"hnouff$.ka6`hG$nly3z\"><field name=\"NUM\">0</field></shadow></value><value name=\"fromHigh\"><shadow type=\"math_number\" id=\"O%~`Xq#TKEHrOi2efG^P\"><field name=\"NUM\">-100</field></shadow></value><value name=\"toLow\"><shadow type=\"math_number\" id=\"Ia~A1nJ[HFW~a~2=PPCp\"><field name=\"NUM\">0</field></shadow></value><value name=\"toHigh\"><shadow type=\"math_number\" id=\"z$l7JTniK$SV!I+^K3B(\"><field name=\"NUM\">1023</field></shadow></value></block></value></block></next></block></statement></block></statement></block></xml>","main.ts":"  ","README.md":"","pxt.json":"{\n    \"name\": \"main\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1739603505884,"editorVersion":"7.0.57","text":{"main.ts":"    namespace Tobbie{\n        let ADL_R: number = 0;\n        let ADH_R: number = 0;\n        let ADL_L: number = 0;\n        let ADH_L: number = 0;\n        let Read_LIR: number = 0;\n        let Read_RIR: number = 0;\n        let event_src_ir = 12;\n        let event_ir_sensor = 1;\n        let Motor_R: boolean = false;\n        let Motor_L: boolean = false;\n        let PX: number = 0;\n        let PY: number = 0;\n        let Force: number = 10;\n\n        function IR_sensorL(irdataL: number) {   //此為中斷觸發方塊\n            control.inBackground(() => {\n                let flag = false\n                let last_flag = false\n                while (true) {\n                    let ob: boolean = LBlock();\n                    if (ob) { flag = true } else { flag = false }\n                    if (flag != last_flag) {\n                        if (flag) {\n                            control.raiseEvent(event_src_ir, event_ir_sensor)\n                            basic.pause(300) //300ms\n                        }\n                        last_flag = flag\n                    }\n                    basic.pause(1)\n\n                }\n\n            }\n            )\n\n        }\n        //    \n        //    背景執行紅外線測距\n        //    @param irdata_Set ; eg: 512\n        //    \n        //    //% blockId=\"IR_EVENTL\" block=\"ON obstacles on the left: |%irdata_Set\"\n        //    //% irdata_Set.min=0 irdata_Set.max=1023\n        //    //% blockGap=10 weight=99   //代表其重要性，越重放越高\n        //    export function onIRL(irdata_Set: number = 512, handler: Action) {\n        //       IR_sensorL(irdata_Set);\n        //        control.onEvent(event_src_ir, event_ir_sensor, handler); \n\n        //   }\n        //    function IR_sensorR(irdata: number) { \n        //        control.inBackground(() => {\n        //           let flag = false\n        //            let last_flag = false\n        //            while (true) {\n        //                let ob: boolean = LBlock();\n        //                if(ob){flag=true}else{flag=false}\n        //                if (flag != last_flag) {\n        //                    if (flag) { \n        //                        control.raiseEvent(event_src_ir, event_ir_sensor)\n        //                        basic.pause(3)\n        //                    }\n        //                    last_flag = flag\n        //                }\n        //                basic.pause(1)\n        //            }   \n        //        }      \n        //        )\n        //    }\n\n        /** Read the value sensed by the right side of the infrared sensor.\n        */\n        //% blockId=\"Read_RBolck\" block=\"get right IR data(return 0~1024)\"\n        //% blockGap=5 weight=65                 //與下一個方塊的間隙及排重\n        export function Read_RBlock(): number {\n            basic.pause(100)\n            ADL_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 0)\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) Read_RIR = ADH_R - ADL_R;\n            return (Read_RIR)\n        }\n        /** Read the value sensed by the left side of the infrared sensor.\n        */\n        //% blockId=\"Read_LBolck\" block=\"get left IR data(trtuen 0~1024)\"\n        //% blockGap=15 weight=60                 //與下一個方塊的間隙及排重\n        export function Read_LBlock(): number {\n            basic.pause(100)\n            ADL_L = pins.analogReadPin(AnalogPin.P1)\n            pins.digitalWritePin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_L = pins.analogReadPin(AnalogPin.P1)\n            pins.digitalWritePin(DigitalPin.P12, 0)\n\n            Read_LIR = ADH_L - ADL_L;\n            return (Read_LIR)\n        }\n        /**\n            *Determine if there are obstacles on the right side.\n            *@param thresholdR ; eg: 512\n            */\n        //% blockId=\"RBolck\" block=\"is the right IR over %thresholdR strength\"\n        //% thresholdR.min=0 thresholdR.max=1023\n        //% blockGap=5 weight=58\n        export function RBlock(thresholdR: number = 512): boolean {\n            basic.pause(100)\n            ADL_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_R = pins.analogReadPin(AnalogPin.P2)\n            pins.digitalWritePin(DigitalPin.P12, 0)\n\n            if (((ADH_R - ADL_R) > thresholdR) && (pins.digitalReadPin(DigitalPin.P8) == 1)) {\n                //basic.showIcon(IconNames.House)\n                return (true)\n            } else {\n                //basic.showIcon(IconNames.Cow)\n                return (false)\n            }\n        }\n        /**\n        *Determine if there are obstacles on the left side.\n        *@param thresholdL ; eg: 512\n        */\n        //% blockId=\"LBolck\" block=\"is the left IR over %thresholdL strength\"\n        //% thresholdL.min=0 thresholdL.max=1023\n        //% blockGap=10 weight=57\n        export function LBlock(thresholdL: number = 512): boolean {\n            basic.pause(100)\n            ADL_L = pins.analogReadPin(AnalogPin.P1)\n            pins.digitalWritePin(DigitalPin.P12, 1)\n            control.waitMicros(250)\n            ADH_L = 0\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) {\n                ADH_L = pins.analogReadPin(AnalogPin.P1)\n                pins.digitalWritePin(DigitalPin.P12, 0)\n            }\n            if ((ADH_L - ADL_L) > thresholdL) {//512) { \n                //basic.showIcon(IconNames.House)\n                return (true)\n            } else {\n                //basic.showIcon(IconNames.Cow)\n                return (false)\n            }\n        }\n\n\n        //輸出脈波\n        //% blockId=\"IRbolck\" block=\"Out pulse & show-04\"\n        //% blockGap=10 weight=55\n        //export function IRblock() {\n        //    ADL_L = pins.analogReadPin(AnalogPin.P1)\n        //    ADL_R = pins.analogReadPin(AnalogPin.P2)\n        //    pins.digitalWritePin(DigitalPin.P12, 1)\n        //    control.waitMicros(250)\n        //    ADH_L = pins.analogReadPin(AnalogPin.P1)\n        //    ADH_R = pins.analogReadPin(AnalogPin.P2)\n        //    pins.digitalWritePin(DigitalPin.P12, 0)\n\n        //    if ((ADH_L-ADL_L) > 512) { \n        //basic.showIcon(IconNames.House)\n        //        led.plot(0, 0)\n        //        led.unplot(0,4)\n        //    } else {\n        //basic.showIcon(IconNames.Cow)\n        //        led.plot(0, 4)\n        //        led.unplot(0,0)\n        //    }\n\n        //    if ((ADH_R-ADL_R) > 512) { \n        //basic.showIcon(IconNames.House)\n        //        led.plot(4, 0)\n        //        led.unplot(4, 4)\n        //   } else {\n        //basic.showIcon(IconNames.Cow)\n        //        led.plot(4, 4)\n        //        led.unplot(4,0)\n        //       }\n\n        //return(true)       \n        //}\n        /**\n        *Tobbie-II walks forward.\n        */\n        //% blockId=\"forward\" block=\"Tobbie-II walking forward\"\n        //% blockGap=3 weight=35\n        export function forward() {\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) {\n                pins.digitalWritePin(DigitalPin.P13, 1)\n                pins.digitalWritePin(DigitalPin.P14, 0)\n            }\n        }\n        /**\n        *Tobbie-II walks backward.\n        */\n        //% blockId=\"backward\" block=\"Tobbie-II walking backward\"\n        //% blockGap=3  weight=34\n        export function backward() {\n            if (Force != 0) {\n                pins.digitalWritePin(DigitalPin.P13, 0)\n                pins.digitalWritePin(DigitalPin.P14, 1)\n                Force = Force - 1;\n            }\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) { Force = 10 }\n\n        }\n        /**\n        *Tobbie-II stops walking.\n        */\n        //% blockId=\"stopwalk\" block=\"Tobbie-II stop walking\"\n        //% blockGap=10 weight=33\n        export function stopwalk() {\n            pins.digitalWritePin(DigitalPin.P13, 0)\n            pins.digitalWritePin(DigitalPin.P14, 0)\n        }\n        /**\n        *Tobbie-II rotates to the right.\n        */\n        //% blockId=\"rightward\" block=\"Tobbie-II turns right\"\n        //% blockGap=3  weight=32\n        export function rightward() {\n            pins.digitalWritePin(DigitalPin.P15, 0)\n            pins.digitalWritePin(DigitalPin.P16, 1)\n            Motor_L = false\n            Motor_R = true\n        }\n        /**\n        *Tobbie-II rotates to the left.\n        */\n        //% blockId=\"leftward\" block=\"Tobbie-II turns left\"\n        //% blockGap=3  weight=31\n        export function leftward() {\n            pins.digitalWritePin(DigitalPin.P15, 1)\n            pins.digitalWritePin(DigitalPin.P16, 0)\n            Motor_L = true\n            Motor_R = false\n        }\n        /**\n        *Tobbie-II stops rotating.\n        */\n        //% blockId=\"stopturn\" block=\"Tobbie-II stops rotating.\"\n        //% blockGap=10 weight=30\n        export function stopturn() {\n            if (Motor_L || Motor_R) {\n                if (Motor_R) {\n                    pins.digitalWritePin(DigitalPin.P15, 1)\n                    pins.digitalWritePin(DigitalPin.P16, 0)\n                } else {\n                    pins.digitalWritePin(DigitalPin.P15, 0)\n                    pins.digitalWritePin(DigitalPin.P16, 1)\n                }\n                basic.pause(50)\n            }\n            if (pins.digitalReadPin(DigitalPin.P8) == 1) {\n                pins.digitalWritePin(DigitalPin.P15, 0)\n                pins.digitalWritePin(DigitalPin.P16, 0)\n                Motor_L = false\n                Motor_R = false\n            }\n        }\n\n        /**\n           *Tobbie-II stamps his foot for a certain number of times.\n           *@param time describe parameter here, eg:5\n           */\n        //% blockId=\"vibrate\" block=\"Tobbie-II stamps %time times\"\n        //% time.min=1 time.max=100\n        //% blockGap=5 weight=25\n        //% advanced=true\n        export function vibrate(time: number): void {\n            for (let i = 0; i < time; i++) {\n                pins.digitalWritePin(DigitalPin.P13, 1)  //向前\n                pins.digitalWritePin(DigitalPin.P14, 0)\n                basic.pause(150)\n                pins.digitalWritePin(DigitalPin.P13, 0)  //向後\n                pins.digitalWritePin(DigitalPin.P14, 1)\n                basic.pause(150)\n            }\n            pins.digitalWritePin(DigitalPin.P13, 0)      //停止\n            pins.digitalWritePin(DigitalPin.P14, 0)\n        }\n        /**\n           *Tobbie-II shakes his head for a certain number of times.\n           *@param time describe parameter here, eg:5\n           */\n        //% blockId=\"shake_head\" block=\"Tobbie-II shakes head %time times\"\n        //% time.min=1 time.max=100\n        //% blockGap=5 weight=26\n        //% advanced=true\n        export function shake_head(time: number): void {\n            for (let i = 0; i < time; i++) {\n                pins.digitalWritePin(DigitalPin.P15, 1)  //左轉\n                pins.digitalWritePin(DigitalPin.P16, 0)\n                basic.pause(250)\n                pins.digitalWritePin(DigitalPin.P15, 0)  //右轉\n                pins.digitalWritePin(DigitalPin.P16, 1)\n                basic.pause(250)\n            }\n            pins.digitalWritePin(DigitalPin.P15, 0)      //停止行走\n            pins.digitalWritePin(DigitalPin.P16, 0)\n        }\n        /**\n            *Tobbie-II repeats the dance for for a certain number of times.\n            *@param time describe parameter here, eg:5\n            */\n        //% blockId=\"dance\" block=\"Tobbie-II dances %time times\"\n        //% time.min=1 time.max=100\n        //% blockGap=5 weight=24\n        //% advanced=true\n        export function dance(time: number): void {\n            for (let i = 0; i < time; i++) {\n                pins.digitalWritePin(DigitalPin.P13, 0)  //向後\n                pins.digitalWritePin(DigitalPin.P14, 1)\n                pins.digitalWritePin(DigitalPin.P15, 0)  //右轉\n                pins.digitalWritePin(DigitalPin.P16, 1)\n                basic.pause(250)\n                pins.digitalWritePin(DigitalPin.P13, 1)  //向前\n                pins.digitalWritePin(DigitalPin.P14, 0)\n                pins.digitalWritePin(DigitalPin.P15, 1)  //左轉\n                pins.digitalWritePin(DigitalPin.P16, 0)\n                basic.pause(250)\n            }\n            pins.digitalWritePin(DigitalPin.P13, 0)\n            pins.digitalWritePin(DigitalPin.P14, 0)\n            pins.digitalWritePin(DigitalPin.P15, 0)\n            pins.digitalWritePin(DigitalPin.P16, 0)\n        }\n        /**\n            *Tobbie II shows his mood on the face (APP only).\n            *@param RX_Data describe parameter here\n            */\n        //% blockId=\"BLE_DOT\" block=\"Tobbie II shows mood on face(APP only) %RX_Data\"\n        //% blockGap=5 weight=23\n        //% advanced=true\n        export function drawface(RX_Data: string): void {\n            basic.clearScreen()\n            for (let PY = 0; PY <= 4; PY++) {\n                let PLOT_DATA: number = parseInt(RX_Data.substr(PY * 2 + 1, 2))\n                for (let PX = 0; PX <= 4; PX++) {\n                    if (PLOT_DATA % 2 == 1) {\n                        led.plot(PX, PY)\n                        PLOT_DATA = PLOT_DATA - 1\n                    }\n                    PLOT_DATA = PLOT_DATA / 2\n                }\n            }\n        }\n    }\n});    \n// Tutaj funkcja Bluetooth MUSI BYĆ OSOBNO\nbluetooth.onBluetoothConnected(function () {\n    basic.showIcon(IconNames.Yes);\n    // Możesz tutaj użyć funkcji z `Tobbie`, np.:\n    Tobbie.drawface(\"FF00FF\");\n});\n","pxt.json":"{\n    \"name\": \"Tobbie-II-Test\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"microphone\": \"*\",\n        \"bluetooth\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\"\n    ],\n    \"testFiles\": [],\n    \"targetVersions\": {\n        \"target\": \"4.0.16\",\n        \"targetId\": \"microbit\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"yotta\": {\n        \"config\": {\n            \"microbit-dal\": {\n                \"bluetooth\": {\n                    \"open\": 1,\n                    \"pairing_mode\": 0,\n                    \"whitelist\": 0\n                }\n            }\n        }\n    }\n}\n"}}],"shares":[],"lastSaveTime":1739603747883}